<?xml version="1.0" encoding="UTF-8"?>
<!--sql语句配置文件： 编写数据库查询语句的xml,一条语句在mapper里写一个标签，注意标签要ID -->
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.UserMapper">
<!-- sql查询语句映射 -->
<select id="selectUser" resultType="hashmap">
select * from student
</select>


<select id="findUserByStuName" resultType="hashmap" parameterType="String"><!-- resultType返回值类型需要用自定义的类  -->
select * from student where stuName=#{xx} <!-- 表示学生姓名来自一个变量xx可随便写，值直接从Java代码中来 -->
</select>


<!-- parameterType表示参数类型，多个参数时要写多个类型，所以做成自定义类User -->
<select id="findUserByStuNameAndPassword" resultType="hashmap" parameterType="domain.Student">
select * from student where stuName='${stuName}' and stuPassword='${stuPassword}'<!-- $符号需要用引号 -->
</select>

<!-- 返回类型改为domain.Student -->
<select id="findUserByStudentinfo" resultType="domain.Student" parameterType="domain.Student">
select * from student where stuName='${stuName}' and stuPassword='${stuPassword}'<!-- $符号需要用引号 -->
</select>
<select id="selectOne" resultType="domain.Student" parameterType="domain.Student">
select * from student where stuName='${stuName}' and stuPassword='${stuPassword}'<!-- $符号需要用引号 -->
</select>

<!-- 插入记录 -->
<insert id="insertStudent" parameterType="domain.Student">
insert into student(stuName,stuPassword) values(#{stuName},#{stuPassword})
</insert>

<!-- 修改密码 -->
<update id="updatePassword" parameterType="domain.Student"><!-- 修改无返回值 -->
update student set stuPassword=#{stuPassword} where stuName=#{stuName}
</update>

<!-- 删除学生 -->
<delete id="deleteStudent" parameterType="domain.Student">
delete from student where stuName=#{stuName}
</delete>
</mapper>